plugins {
    id 'androidx.baselineprofile'
    id 'org.jetbrains.kotlin.plugin.compose' version '2.0.21'
}
apply from: '../configs/dependencies.gradle'
apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'
apply plugin: 'com.google.firebase.appdistribution'
apply plugin: 'dagger.hilt.android.plugin'
apply plugin: 'androidx.navigation.safeargs.kotlin'
apply plugin: 'kotlin-parcelize'

android {
    compileSdkVersion androidConfig.compileSdkVersion

    buildFeatures {
        viewBinding = true
        compose = true
        buildConfig = true
    }

    defaultConfig {
        applicationId "io.nunchuk.android"
        minSdkVersion androidConfig.minSdkVersion
        targetSdkVersion androidConfig.targetSdkVersion
        versionCode androidConfig.versionCode
        versionName androidConfig.versionName
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
        resConfigs "en"
        ndk {
            //abiFilters 'armeabi-v7a', 'x86', 'arm64-v8a', 'x86_64'
            abiFilters 'arm64-v8a', 'armeabi-v7a'
        }

        javaCompileOptions {
            annotationProcessorOptions {
                arguments["room.incremental"] = "true"
            }
        }

        multiDexEnabled true
    }

    signingConfigs {
        release {
            def keystorePropertiesFile = rootProject.file("keystore.properties")
            if (keystorePropertiesFile.exists()) {
                def keystoreProperties = new Properties()
                keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
                keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPassword']
                storeFile file(keystoreProperties['storeFile'])
                storePassword keystoreProperties['storePassword']
            } else {
                storeFile file("${project.rootDir}/dummy.keystore")
                storePassword "android"
                keyAlias "androiddebugkey"
                keyPassword "android"

            }
        }
        debug {
            storeFile file("${project.rootDir}/debug.keystore")
            storePassword "android"
            keyAlias "androiddebugkey"
            keyPassword "android"
        }
    }

    buildTypes {
        debug {
            versionNameSuffix androidConfig.taskLabel
            minifyEnabled false
            debuggable true
        }
        release {
            minifyEnabled true
            debuggable false
            multiDexKeepFile file('multidex-config.txt')
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard.conf'
            signingConfig signingConfigs.release

            // Disable PNG crunching
            aaptOptions {
                cruncherEnabled = false
            }

            firebaseCrashlytics {
                // Enable processing and uploading of native symbols to Firebase servers.
                // By default, this is disabled to improve build speeds.
                // This flag must be enabled to see properly-symbolicated native
                // stack traces in the Crashlytics dashboard.
                nativeSymbolUploadEnabled true
                unstrippedNativeLibsDir file("src/main/obj")
            }
        }
    }

    flavorDimensions "env"
    productFlavors {
        production {
            applicationId "io.nunchuk.android"
            firebaseAppDistribution {
                appId = "1:712097058578:android:6ba4711f048801f813edcb"
                releaseNotesFile = "nunchuk-app/release_notes.txt"
                testers = "hung.tran@nunchuk.io"
                groups = "testers"
            }
            dimension "env"
            resValue "string", "app_name", "Nunchuk"
        }
        development {
            applicationId "com.nunchuk.android.dev"
            firebaseAppDistribution {
                appId = "1:712097058578:android:3a7fe0dc4e6b89b713edcb"
                releaseNotesFile = "nunchuk-app/release_notes.txt"
                testers = "hung.tran@nunchuk.io"
                groups = "testers"
            }
            dimension "env"
            resValue "string", "app_name", "Development"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
    }

    kotlin {
        jvmToolchain(17)
    }

    composeOptions {
        kotlinCompilerExtensionVersion '1.5.14'
    }
    packagingOptions {
        resources {
            excludes += ['META-INF/DEPENDENCIES', 'META-INF/LICENSE', 'META-INF/LICENSE.txt', 'META-INF/license.txt', 'META-INF/NOTICE', 'META-INF/NOTICE.txt', 'META-INF/notice.txt', 'META-INF/ASL2.0', 'META-INF/versions/9/module-info.class']
        }
    }

    namespace 'com.nunchuk.android'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinStdlibVersion"

    implementation project(':nunchuk-arch')
    implementation project(':nunchuk-auth')
    implementation project(':nunchuk-core')
    implementation project(':nunchuk-contact')
    implementation project(':nunchuk-database')
    implementation project(':nunchuk-main')
    implementation project(':nunchuk-domain')
    implementation project(':nunchuk-network')
    implementation project(':nunchuk-signer')
    implementation project(':nunchuk-signer-software')
    implementation project(':nunchuk-wallet')
    implementation project(':nunchuk-wallet-personal')
    implementation project(':nunchuk-wallet-shared')
    implementation project(':nunchuk-widget')
    implementation project(':nunchuk-transaction')
    implementation project(':nunchuk-messages')
    implementation project(':nunchuk-utils')
    implementation project(':nunchuk-settings')
    implementation project(':nunchuk-notifications')
    implementation 'androidx.profileinstaller:profileinstaller:1.4.0'
    baselineProfile project(':baselineprofile')

    debugImplementation nunchukDeps.nativeSdk
    releaseImplementation nunchukDeps.prebuildNativeSdk
    implementation matrixDeps.matrixSdk
    implementation workMangerDeps.values()

    implementation loggingDeps.timber

    implementation platform(playServices.firebaseBom)
    implementation playServices.firebaseCrashlytics
    implementation playServices.firebaseNdkCrashlytics

    implementation lifecycleDeps.values()

    kapt hiltDeps.processor
    implementation hiltDeps.hilt
    implementation hiltDeps.hiltNavigation

    implementation networkDeps.values()
    implementation platform('androidx.compose:compose-bom:2024.12.01')
    implementation composeDeps.values()

    implementation androidxDeps.values()
    implementation googleDeps.values()

    // Kotlin
    implementation navigationDeps.values()
    implementation coroutineDeps.values()

    implementation "com.github.skydoves:landscapist-glide:2.2.2"

    implementation 'com.google.android.gms:play-services-base:18.2.0'
    implementation 'com.google.firebase:firebase-messaging-ktx:23.2.0'

    implementation "io.github.mataku:middle-ellipsis-text:1.2.0"
    implementation zxingDeps.values()

    def multidex_version = "2.0.1"
    implementation "androidx.multidex:multidex:$multidex_version"

    implementation "io.branch.sdk.android:library:5.8.0"
    implementation 'com.google.android.gms:play-services-ads-identifier:18.1.0'
}
